"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvcGF0aHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElzTmV2ZXIgfSBmcm9tIFwiLi4vaXMtbmV2ZXJcIjtcbmltcG9ydCB7IENyZWF0ZVR5cGVPcHRpb25zIH0gZnJvbSBcIi4uL2NyZWF0ZS10eXBlLW9wdGlvbnNcIjtcbmltcG9ydCB7IFZhbHVlT2YgfSBmcm9tIFwiLi4vdmFsdWUtb2ZcIjtcbmltcG9ydCB7IEhhc1BhcnNhYmxlUGF0aCB9IGZyb20gXCIuLi9oYXMtcGFyc2FibGUtcGF0aFwiO1xuXG50eXBlIFBhdGhhYmxlID0gc3RyaW5nIHwgbnVtYmVyO1xuXG50eXBlIERlZmF1bHRSZWN1cnNpdmVQYXRoc09wdGlvbnMgPSB7XG4gIGRlcHRoOiBbXTtcbn07XG5cbi8qKlxuICogQHBhcmFtIGRlcHRoIFRoaXMgb3B0aW9uIGNvdW50cyB0aGUgbnVtYmVyIG9mIHJlY3Vyc2l2ZSBjYWxscyBpblxuICogYFJlY3Vyc2l2ZVBhdGhzT3B0aW9uc1snZGVwdGgnXVsnbGVuZ3RoJ11gLiBVc2VkIGluIGNvbWJpbmF0aW9uIHdpdGhcbiAqIGBQYXRoc09wdGlvbnNbJ2RlcHRoJ11gXG4gKi9cbnR5cGUgUmVjdXJzaXZlUGF0aHNPcHRpb25zID0ge1xuICBkZXB0aDogYW55W107XG59O1xuXG4vKipcbiAqIEBwYXJhbSBkZXB0aCBCeSBkZWZhdWx0LCB0aGUgZGVwdGggb3B0aW9uIGlzIHNldCB0byA3LiBJdCBzaG91bGQgY292ZXIgdGhlXG4gKiBtYWpvcml0eSBvZiB1c2UgY2FzZXMuIElmIGJ5IGFueSBjaGFuY2UgaXQgZG9lc24ndCBmaXQgeW91LCBmZWVsIGZyZWUgdG9cbiAqIGluY3JlYXNlIHRoZSB2YWx1ZS4gSG93ZXZlciwgdGhpcyBtYXkgaW5jcmVhc2UgdGhlIGNoYW5jZSBvZiBnZXR0aW5nXG4gKiBgVHlwZSBpbnN0YW50aWF0aW9uIGlzIGV4Y2Vzc2l2ZWx5IGRlZXAgYW5kIHBvc3NpYmx5IGluZmluaXRlYCBlcnJvci5cbiAqXG4gKiBAcGFyYW0gYW55QXJyYXlJbmRleEFjY2Vzc29yIEJ5IGRlZmF1bHQgdGhlcmUgaXMgbm8gd2lsZGNhcmQgYWNjZXNzIHRvXG4gKiBhcnJheSBpbmRpY2VzIC0gdXNhZ2UgbXVzdCBiZSBpbnRlbnRpb25hbGx5IGNvbmZpZ3VyZWQuXG4gKi9cbnR5cGUgRGVmYXVsdFBhdGhzT3B0aW9ucyA9IHtcbiAgZGVwdGg6IDc7XG4gIGFueUFycmF5SW5kZXhBY2Nlc3NvcjogYCR7bnVtYmVyfWA7XG59O1xuXG4vKipcbiAqIEBwYXJhbSBkZXB0aCBUaGlzIG9wdGlvbiByZXN0cmljdHMgdGhlIGRlcHRoIG9mIHRoZSBwYXRocyBsb29rdXAgYW5kIHJlbW92ZXMgYFR5cGVcbiAqIGluc3RhbnRpYXRpb24gaXMgZXhjZXNzaXZlbHkgZGVlcCBhbmQgcG9zc2libHkgaW5maW5pdGVgIGVycm9ycyBmb3JcbiAqIHBvdGVudGlhbGx5IGluZmluaXRlIHR5cGVzLlxuICpcbiAqIEBwYXJhbSBhbnlBcnJheUluZGV4QWNjZXNzb3IgVGhpcyB3aWxkY2FyZCB3aWxsIHNhdGlzZnkgYW55IGFycmF5IGluZGV4IGlmIGRlZmluZWQuXG4gKi9cbnR5cGUgUGF0aHNPcHRpb25zID0ge1xuICBkZXB0aDogbnVtYmVyO1xuICBhbnlBcnJheUluZGV4QWNjZXNzb3I6IHN0cmluZztcbn07XG5cbnR5cGUgQXBwZW5kPFR1cGxlIGV4dGVuZHMgYW55W10+ID0gWy4uLlR1cGxlLCAwXTtcblxudHlwZSBSZWN1cnNpdmVQYXRoczxcbiAgVHlwZSxcbiAgVXNlck9wdGlvbnMgZXh0ZW5kcyBSZXF1aXJlZDxQYXRoc09wdGlvbnM+LFxuICBDYWxsT3B0aW9ucyBleHRlbmRzIFJlY3Vyc2l2ZVBhdGhzT3B0aW9ucyxcbj4gPSBJc05ldmVyPGtleW9mIFR5cGU+IGV4dGVuZHMgdHJ1ZVxuICA/IG5ldmVyXG4gIDogLy8gYE5vbk51bGxhYmxlYCByZW1vdmVzIGB1bmRlZmluZWRgIHdoZW4gcGFydGlhbCBwcm9wZXJ0aWVzIGV4aXN0IGluIG9iamVjdFxuICAgIE5vbk51bGxhYmxlPFxuICAgICAgVmFsdWVPZjx7XG4gICAgICAgIFtLZXkgaW4ga2V5b2YgVHlwZV06IEtleSBleHRlbmRzIFBhdGhhYmxlXG4gICAgICAgICAgP1xuICAgICAgICAgICAgICB8IGAke0FueUFycmF5SW5kZXhBY2Nlc3Nvck9yS2V5PEtleSwgVXNlck9wdGlvbnM+fWBcbiAgICAgICAgICAgICAgfCAoQ2FsbE9wdGlvbnNbXCJkZXB0aFwiXVtcImxlbmd0aFwiXSBleHRlbmRzIFVzZXJPcHRpb25zW1wiZGVwdGhcIl1cbiAgICAgICAgICAgICAgICAgID8gLy8gU3RvcCBhdCB0aGUgY29uZmlndXJlZCBkZXB0aFxuICAgICAgICAgICAgICAgICAgICBuZXZlclxuICAgICAgICAgICAgICAgICAgOiBUeXBlW0tleV0gZXh0ZW5kcyBpbmZlciBWYWx1ZVxuICAgICAgICAgICAgICAgICAgPyBWYWx1ZSBleHRlbmRzIFZhbHVlXG4gICAgICAgICAgICAgICAgICAgID8gLy8gQXZvaWQgY2FsbGluZyBgVW5zYWZlUGF0aHNgIHRvIGtlZXAgYENhbGxPcHRpb25zYCBsb2NhbGx5XG4gICAgICAgICAgICAgICAgICAgICAgSGFzUGFyc2FibGVQYXRoPFZhbHVlPiBleHRlbmRzIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICA/IFJlY3Vyc2l2ZVBhdGhzPFxuICAgICAgICAgICAgICAgICAgICAgICAgICBWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgVXNlck9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXB0aDogQXBwZW5kPENhbGxPcHRpb25zW1wiZGVwdGhcIl0+O1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICA+IGV4dGVuZHMgaW5mZXIgUmVzdFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBJc05ldmVyPFJlc3Q+IGV4dGVuZHMgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IG5ldmVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogUmVzdCBleHRlbmRzIFBhdGhhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gYCR7QW55QXJyYXlJbmRleEFjY2Vzc29yT3JLZXk8S2V5LCBVc2VyT3B0aW9ucz59LiR7UmVzdH1gXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogbmV2ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogbmV2ZXJcbiAgICAgICAgICAgICAgICAgICAgICA6IG5ldmVyXG4gICAgICAgICAgICAgICAgICAgIDogbmV2ZXJcbiAgICAgICAgICAgICAgICAgIDogbmV2ZXIpXG4gICAgICAgICAgOiBuZXZlcjtcbiAgICAgIH0+XG4gICAgPjtcblxudHlwZSBVbnNhZmVQYXRoczxUeXBlLCBPcHRpb25zIGV4dGVuZHMgUmVxdWlyZWQ8UGF0aHNPcHRpb25zPj4gPSBUeXBlIGV4dGVuZHMgVHlwZVxuICA/IEhhc1BhcnNhYmxlUGF0aDxUeXBlPiBleHRlbmRzIHRydWVcbiAgICA/IFJlY3Vyc2l2ZVBhdGhzPFR5cGUsIE9wdGlvbnMsIERlZmF1bHRSZWN1cnNpdmVQYXRoc09wdGlvbnM+XG4gICAgOiBuZXZlclxuICA6IG5ldmVyO1xuXG50eXBlIEFueUFycmF5SW5kZXhBY2Nlc3Nvck9yS2V5PEtleSBleHRlbmRzIFBhdGhhYmxlLCBVc2VyT3B0aW9ucyBleHRlbmRzIFJlcXVpcmVkPFBhdGhzT3B0aW9ucz4+ID0gS2V5IGV4dGVuZHMgbnVtYmVyXG4gID8gS2V5IHwgVXNlck9wdGlvbnNbXCJhbnlBcnJheUluZGV4QWNjZXNzb3JcIl1cbiAgOiBLZXk7XG5cbmV4cG9ydCB0eXBlIFBhdGhzPFR5cGUsIE92ZXJyaWRlUGF0aE9wdGlvbnMgZXh0ZW5kcyBQYXJ0aWFsPFBhdGhzT3B0aW9ucz4gPSB7fT4gPSBVbnNhZmVQYXRoczxcbiAgVHlwZSxcbiAgQ3JlYXRlVHlwZU9wdGlvbnM8UGF0aHNPcHRpb25zLCBPdmVycmlkZVBhdGhPcHRpb25zLCBEZWZhdWx0UGF0aHNPcHRpb25zPlxuPjtcbiJdfQ==