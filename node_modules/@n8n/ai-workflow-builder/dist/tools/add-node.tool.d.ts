import type { INodeTypeDescription } from 'n8n-workflow';
import { z } from 'zod';
import type { BuilderTool, BuilderToolBase } from '../utils/stream-processor';
export declare const nodeCreationSchema: z.ZodObject<{
    nodeType: z.ZodString;
    name: z.ZodString;
    connectionParametersReasoning: z.ZodString;
    connectionParameters: z.ZodObject<{}, "passthrough", z.ZodTypeAny, z.objectOutputType<{}, z.ZodTypeAny, "passthrough">, z.objectInputType<{}, z.ZodTypeAny, "passthrough">>;
}, "strip", z.ZodTypeAny, {
    nodeType: string;
    name: string;
    connectionParametersReasoning: string;
    connectionParameters: {} & {
        [k: string]: unknown;
    };
}, {
    nodeType: string;
    name: string;
    connectionParametersReasoning: string;
    connectionParameters: {} & {
        [k: string]: unknown;
    };
}>;
export declare function getAddNodeToolBase(nodeTypes: INodeTypeDescription[]): BuilderToolBase;
export declare function createAddNodeTool(nodeTypes: INodeTypeDescription[]): BuilderTool;
