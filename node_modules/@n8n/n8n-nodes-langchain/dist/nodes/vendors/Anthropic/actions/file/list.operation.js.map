{"version":3,"sources":["../../../../../../nodes/vendors/Anthropic/actions/file/list.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData, INodeProperties } from 'n8n-workflow';\nimport { updateDisplayOptions } from 'n8n-workflow';\n\nimport type { File } from '../../helpers/interfaces';\nimport { getBaseUrl } from '../../helpers/utils';\nimport { apiRequest } from '../../transport';\n\ninterface FileListResponse {\n\tdata: File[];\n\tfirst_id: string;\n\tlast_id: string;\n\thas_more: boolean;\n}\n\nexport const properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\ttype: 'number',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t},\n\t\tdefault: 50,\n\t\tdescription: 'Max number of results to return',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\treturnAll: [false],\n\t\t\t},\n\t\t},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\toperation: ['list'],\n\t\tresource: ['file'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tconst returnAll = this.getNodeParameter('returnAll', i, false);\n\tconst limit = this.getNodeParameter('limit', i, 50);\n\tconst baseUrl = await getBaseUrl.call(this);\n\tif (returnAll) {\n\t\treturn await getAllFiles.call(this, baseUrl, i);\n\t} else {\n\t\treturn await getFiles.call(this, baseUrl, i, limit);\n\t}\n}\n\nasync function getAllFiles(this: IExecuteFunctions, baseUrl: string, i: number) {\n\tlet hasMore = true;\n\tlet lastId: string | undefined = undefined;\n\tconst files: File[] = [];\n\twhile (hasMore) {\n\t\tconst response = (await apiRequest.call(this, 'GET', '/v1/files', {\n\t\t\tqs: {\n\t\t\t\tlimit: 1000,\n\t\t\t\tafter_id: lastId,\n\t\t\t},\n\t\t})) as FileListResponse;\n\n\t\thasMore = response.has_more;\n\t\tlastId = response.last_id;\n\t\tfiles.push(...response.data);\n\t}\n\n\treturn files.map((file) => ({\n\t\tjson: { ...file, url: `${baseUrl}/v1/files/${file.id}` },\n\t\tpairedItem: { item: i },\n\t}));\n}\n\nasync function getFiles(this: IExecuteFunctions, baseUrl: string, i: number, limit: number) {\n\tconst response = (await apiRequest.call(this, 'GET', '/v1/files', {\n\t\tqs: {\n\t\t\tlimit,\n\t\t},\n\t})) as FileListResponse;\n\n\treturn response.data.map((file) => ({\n\t\tjson: { ...file, url: `${baseUrl}/v1/files/${file.id}` },\n\t\tpairedItem: { item: i },\n\t}));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAqC;AAGrC,mBAA2B;AAC3B,uBAA2B;AASpB,MAAM,aAAgC;AAAA,EAC5C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,KAAK;AAAA,MAClB;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,WAAW,CAAC,MAAM;AAAA,IAClB,UAAU,CAAC,MAAM;AAAA,EAClB;AACD;AAEO,MAAM,kBAAc,0CAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,QAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,KAAK;AAC7D,QAAM,QAAQ,KAAK,iBAAiB,SAAS,GAAG,EAAE;AAClD,QAAM,UAAU,MAAM,wBAAW,KAAK,IAAI;AAC1C,MAAI,WAAW;AACd,WAAO,MAAM,YAAY,KAAK,MAAM,SAAS,CAAC;AAAA,EAC/C,OAAO;AACN,WAAO,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG,KAAK;AAAA,EACnD;AACD;AAEA,eAAe,YAAqC,SAAiB,GAAW;AAC/E,MAAI,UAAU;AACd,MAAI,SAA6B;AACjC,QAAM,QAAgB,CAAC;AACvB,SAAO,SAAS;AACf,UAAM,WAAY,MAAM,4BAAW,KAAK,MAAM,OAAO,aAAa;AAAA,MACjE,IAAI;AAAA,QACH,OAAO;AAAA,QACP,UAAU;AAAA,MACX;AAAA,IACD,CAAC;AAED,cAAU,SAAS;AACnB,aAAS,SAAS;AAClB,UAAM,KAAK,GAAG,SAAS,IAAI;AAAA,EAC5B;AAEA,SAAO,MAAM,IAAI,CAAC,UAAU;AAAA,IAC3B,MAAM,EAAE,GAAG,MAAM,KAAK,GAAG,OAAO,aAAa,KAAK,EAAE,GAAG;AAAA,IACvD,YAAY,EAAE,MAAM,EAAE;AAAA,EACvB,EAAE;AACH;AAEA,eAAe,SAAkC,SAAiB,GAAW,OAAe;AAC3F,QAAM,WAAY,MAAM,4BAAW,KAAK,MAAM,OAAO,aAAa;AAAA,IACjE,IAAI;AAAA,MACH;AAAA,IACD;AAAA,EACD,CAAC;AAED,SAAO,SAAS,KAAK,IAAI,CAAC,UAAU;AAAA,IACnC,MAAM,EAAE,GAAG,MAAM,KAAK,GAAG,OAAO,aAAa,KAAK,EAAE,GAAG;AAAA,IACvD,YAAY,EAAE,MAAM,EAAE;AAAA,EACvB,EAAE;AACH;","names":[]}