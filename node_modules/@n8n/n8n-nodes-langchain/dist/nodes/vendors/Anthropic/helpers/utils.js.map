{"version":3,"sources":["../../../../../nodes/vendors/Anthropic/helpers/utils.ts"],"sourcesContent":["import FormData from 'form-data';\nimport type { IDataObject, IExecuteFunctions, ILoadOptionsFunctions } from 'n8n-workflow';\n\nimport { apiRequest } from '../transport';\nimport type { File } from './interfaces';\n\nexport function getMimeType(contentType?: string) {\n\treturn contentType?.split(';')?.[0];\n}\n\nexport async function downloadFile(this: IExecuteFunctions, url: string, qs?: IDataObject) {\n\tconst downloadResponse = (await this.helpers.httpRequest({\n\t\tmethod: 'GET',\n\t\turl,\n\t\tqs,\n\t\treturnFullResponse: true,\n\t\tencoding: 'arraybuffer',\n\t})) as { body: ArrayBuffer; headers: IDataObject };\n\n\tconst mimeType =\n\t\tgetMimeType(downloadResponse.headers?.['content-type'] as string) ?? 'application/octet-stream';\n\tconst fileContent = Buffer.from(downloadResponse.body);\n\treturn {\n\t\tfileContent,\n\t\tmimeType,\n\t};\n}\n\nexport async function uploadFile(\n\tthis: IExecuteFunctions,\n\tfileContent: Buffer,\n\tmimeType: string,\n\tfileName?: string,\n) {\n\tconst form = new FormData();\n\tform.append('file', fileContent, {\n\t\tfilename: fileName ?? 'file',\n\t\tcontentType: mimeType,\n\t});\n\treturn (await apiRequest.call(this, 'POST', '/v1/files', {\n\t\theaders: form.getHeaders(),\n\t\tbody: form,\n\t})) as File;\n}\n\nexport function splitByComma(str: string) {\n\treturn str\n\t\t.split(',')\n\t\t.map((s) => s.trim())\n\t\t.filter((s) => s);\n}\n\nexport async function getBaseUrl(this: IExecuteFunctions | ILoadOptionsFunctions) {\n\tconst credentials = await this.getCredentials('anthropicApi');\n\treturn (credentials.url ?? 'https://api.anthropic.com') as string;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqB;AAGrB,uBAA2B;AAGpB,SAAS,YAAY,aAAsB;AACjD,SAAO,aAAa,MAAM,GAAG,IAAI,CAAC;AACnC;AAEA,eAAsB,aAAsC,KAAa,IAAkB;AAC1F,QAAM,mBAAoB,MAAM,KAAK,QAAQ,YAAY;AAAA,IACxD,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA,oBAAoB;AAAA,IACpB,UAAU;AAAA,EACX,CAAC;AAED,QAAM,WACL,YAAY,iBAAiB,UAAU,cAAc,CAAW,KAAK;AACtE,QAAM,cAAc,OAAO,KAAK,iBAAiB,IAAI;AACrD,SAAO;AAAA,IACN;AAAA,IACA;AAAA,EACD;AACD;AAEA,eAAsB,WAErB,aACA,UACA,UACC;AACD,QAAM,OAAO,IAAI,iBAAAA,QAAS;AAC1B,OAAK,OAAO,QAAQ,aAAa;AAAA,IAChC,UAAU,YAAY;AAAA,IACtB,aAAa;AAAA,EACd,CAAC;AACD,SAAQ,MAAM,4BAAW,KAAK,MAAM,QAAQ,aAAa;AAAA,IACxD,SAAS,KAAK,WAAW;AAAA,IACzB,MAAM;AAAA,EACP,CAAC;AACF;AAEO,SAAS,aAAa,KAAa;AACzC,SAAO,IACL,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EACnB,OAAO,CAAC,MAAM,CAAC;AAClB;AAEA,eAAsB,aAA4D;AACjF,QAAM,cAAc,MAAM,KAAK,eAAe,cAAc;AAC5D,SAAQ,YAAY,OAAO;AAC5B;","names":["FormData"]}