{"version":3,"sources":["../../../../../../nodes/vendors/OpenAi/actions/assistant/update.operation.ts"],"sourcesContent":["import type {\n\tINodeProperties,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tIDataObject,\n} from 'n8n-workflow';\nimport { ApplicationError, NodeOperationError, updateDisplayOptions } from 'n8n-workflow';\n\nimport { apiRequest } from '../../transport';\nimport { assistantRLC, modelRLC } from '../descriptions';\n\nconst properties: INodeProperties[] = [\n\tassistantRLC,\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\tplaceholder: 'Add Option',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Code Interpreter',\n\t\t\t\tname: 'codeInterpreter',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to enable the code interpreter that allows the assistants to write and run Python code in a sandboxed execution environment, find more <a href=\"https://platform.openai.com/docs/assistants/tools/code-interpreter\" target=\"_blank\">here</a>',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Description',\n\t\t\t\tname: 'description',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The description of the assistant. The maximum length is 512 characters.',\n\t\t\t\tplaceholder: 'e.g. My personal assistant',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-multi-options\n\t\t\t\tdisplayName: 'Files',\n\t\t\t\tname: 'file_ids',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-multi-options\n\t\t\t\tdescription:\n\t\t\t\t\t'The files to be used by the assistant, there can be a maximum of 20 files attached to the assistant. You can use expression to pass file IDs as an array or comma-separated string.',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getFiles',\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t\thint: \"Add more files by using the 'Upload a File' operation, any existing files not selected here will be removed.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Instructions',\n\t\t\t\tname: 'instructions',\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription:\n\t\t\t\t\t'The system instructions that the assistant uses. The maximum length is 32768 characters.',\n\t\t\t\tdefault: '',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Knowledge Retrieval',\n\t\t\t\tname: 'knowledgeRetrieval',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to augments the assistant with knowledge from outside its model, such as proprietary product information or documents, find more <a href=\"https://platform.openai.com/docs/assistants/tools/knowledge-retrieval\" target=\"_blank\">here</a>',\n\t\t\t},\n\t\t\t{ ...modelRLC('modelSearch'), required: false },\n\t\t\t{\n\t\t\t\tdisplayName: 'Name',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The name of the assistant. The maximum length is 256 characters.',\n\t\t\t\tplaceholder: 'e.g. My Assistant',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Remove All Custom Tools (Functions)',\n\t\t\t\tname: 'removeCustomTools',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to remove all custom tools (functions) from the assistant',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Output Randomness (Temperature)',\n\t\t\t\tname: 'temperature',\n\t\t\t\tdefault: 1,\n\t\t\t\ttypeOptions: { maxValue: 1, minValue: 0, numberPrecision: 1 },\n\t\t\t\tdescription:\n\t\t\t\t\t'Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive. We generally recommend altering this or temperature but not both.',\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Output Randomness (Top P)',\n\t\t\t\tname: 'topP',\n\t\t\t\tdefault: 1,\n\t\t\t\ttypeOptions: { maxValue: 1, minValue: 0, numberPrecision: 1 },\n\t\t\t\tdescription:\n\t\t\t\t\t'An alternative to sampling with temperature, controls diversity via nucleus sampling: 0.5 means half of all likelihood-weighted options are considered. We generally recommend altering this or temperature but not both.',\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\toperation: ['update'],\n\t\tresource: ['assistant'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nfunction getFileIds(file_ids: unknown): string[] {\n\tif (Array.isArray(file_ids)) {\n\t\treturn file_ids;\n\t}\n\n\tif (typeof file_ids === 'string') {\n\t\treturn file_ids.split(',').map((file_id) => file_id.trim());\n\t}\n\n\tthrow new ApplicationError('Invalid file_ids type');\n}\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tconst assistantId = this.getNodeParameter('assistantId', i, '', { extractValue: true }) as string;\n\tconst options = this.getNodeParameter('options', i, {});\n\n\tconst {\n\t\tmodelId,\n\t\tname,\n\t\tinstructions,\n\t\tcodeInterpreter,\n\t\tknowledgeRetrieval,\n\t\tfile_ids,\n\t\tremoveCustomTools,\n\t\ttemperature,\n\t\ttopP,\n\t} = options;\n\n\tconst assistantDescription = options.description as string;\n\n\tconst body: IDataObject = {};\n\n\tif (file_ids) {\n\t\tconst files = getFileIds(file_ids);\n\t\tif (files.length > 20) {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'The maximum number of files that can be attached to the assistant is 20',\n\t\t\t\t{ itemIndex: i },\n\t\t\t);\n\t\t}\n\n\t\tbody.tool_resources = {\n\t\t\t...((body.tool_resources as object) ?? {}),\n\t\t\tcode_interpreter: {\n\t\t\t\tfile_ids: files,\n\t\t\t},\n\t\t\t// updating file_ids for file_search directly is not supported by OpenAI API\n\t\t\t// only updating vector_store_ids for file_search is supported\n\t\t\t// support for this to be added as part of ADO-2968\n\t\t\t// https://platform.openai.com/docs/api-reference/assistants/modifyAssistant\n\t\t};\n\t}\n\n\tif (modelId) {\n\t\tbody.model = this.getNodeParameter('options.modelId', i, '', { extractValue: true }) as string;\n\t}\n\n\tif (name) {\n\t\tbody.name = name;\n\t}\n\n\tif (assistantDescription) {\n\t\tbody.description = assistantDescription;\n\t}\n\n\tif (instructions) {\n\t\tbody.instructions = instructions;\n\t}\n\n\tif (temperature) {\n\t\tbody.temperature = temperature;\n\t}\n\n\tif (topP) {\n\t\tbody.topP = topP;\n\t}\n\n\tlet tools =\n\t\t((\n\t\t\tawait apiRequest.call(this, 'GET', `/assistants/${assistantId}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'OpenAI-Beta': 'assistants=v2',\n\t\t\t\t},\n\t\t\t})\n\t\t).tools as IDataObject[]) || [];\n\n\tif (codeInterpreter && !tools.find((tool) => tool.type === 'code_interpreter')) {\n\t\ttools.push({\n\t\t\ttype: 'code_interpreter',\n\t\t});\n\t}\n\n\tif (codeInterpreter === false && tools.find((tool) => tool.type === 'code_interpreter')) {\n\t\ttools = tools.filter((tool) => tool.type !== 'code_interpreter');\n\t}\n\n\tif (knowledgeRetrieval && !tools.find((tool) => tool.type === 'file_search')) {\n\t\ttools.push({\n\t\t\ttype: 'file_search',\n\t\t});\n\t}\n\n\tif (knowledgeRetrieval === false && tools.find((tool) => tool.type === 'file_search')) {\n\t\ttools = tools.filter((tool) => tool.type !== 'file_search');\n\t}\n\n\tif (removeCustomTools) {\n\t\ttools = tools.filter((tool) => tool.type !== 'function');\n\t}\n\n\tbody.tools = tools;\n\n\tconst response = await apiRequest.call(this, 'POST', `/assistants/${assistantId}`, {\n\t\tbody,\n\t\theaders: {\n\t\t\t'OpenAI-Beta': 'assistants=v2',\n\t\t},\n\t});\n\n\treturn [\n\t\t{\n\t\t\tjson: response,\n\t\t\tpairedItem: { item: i },\n\t\t},\n\t];\n}\n"],"mappings":"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","names":[]}