{"version":3,"sources":["../../../../../nodes/vendors/OpenAi/helpers/binary-data.ts"],"sourcesContent":["import type { IExecuteFunctions } from 'n8n-workflow';\n\n/** Chunk size to use for streaming. 256Kb */\nconst CHUNK_SIZE = 256 * 1024;\n\n/**\n * Gets the binary data file for the given item index and given property name.\n * Returns the file name, content type and the file content. Uses streaming\n * when possible.\n */\nexport async function getBinaryDataFile(\n\tctx: IExecuteFunctions,\n\titemIdx: number,\n\tbinaryPropertyName: string,\n) {\n\tconst binaryData = ctx.helpers.assertBinaryData(itemIdx, binaryPropertyName);\n\n\tconst fileContent = binaryData.id\n\t\t? await ctx.helpers.getBinaryStream(binaryData.id, CHUNK_SIZE)\n\t\t: await ctx.helpers.getBinaryDataBuffer(itemIdx, binaryPropertyName);\n\n\treturn {\n\t\tfilename: binaryData.fileName,\n\t\tcontentType: binaryData.mimeType,\n\t\tfileContent,\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,MAAM,aAAa,MAAM;AAOzB,eAAsB,kBACrB,KACA,SACA,oBACC;AACD,QAAM,aAAa,IAAI,QAAQ,iBAAiB,SAAS,kBAAkB;AAE3E,QAAM,cAAc,WAAW,KAC5B,MAAM,IAAI,QAAQ,gBAAgB,WAAW,IAAI,UAAU,IAC3D,MAAM,IAAI,QAAQ,oBAAoB,SAAS,kBAAkB;AAEpE,SAAO;AAAA,IACN,UAAU,WAAW;AAAA,IACrB,aAAa,WAAW;AAAA,IACxB;AAAA,EACD;AACD;","names":[]}