{"version":3,"sources":["../../../../nodes/chains/ChainSummarization/helpers.ts"],"sourcesContent":["import { PromptTemplate } from '@langchain/core/prompts';\nimport type { SummarizationChainParams } from 'langchain/chains';\ninterface ChainTypeOptions {\n\tcombineMapPrompt?: string;\n\tprompt?: string;\n\trefinePrompt?: string;\n\trefineQuestionPrompt?: string;\n}\n\nexport function getChainPromptsArgs(\n\ttype: 'stuff' | 'map_reduce' | 'refine',\n\toptions: ChainTypeOptions,\n) {\n\tconst chainArgs: SummarizationChainParams = {\n\t\ttype,\n\t};\n\t// Map reduce prompt override\n\tif (type === 'map_reduce') {\n\t\tconst mapReduceArgs = chainArgs as SummarizationChainParams & {\n\t\t\ttype: 'map_reduce';\n\t\t};\n\t\tif (options.combineMapPrompt) {\n\t\t\tmapReduceArgs.combineMapPrompt = new PromptTemplate({\n\t\t\t\ttemplate: options.combineMapPrompt,\n\t\t\t\tinputVariables: ['text'],\n\t\t\t});\n\t\t}\n\t\tif (options.prompt) {\n\t\t\tmapReduceArgs.combinePrompt = new PromptTemplate({\n\t\t\t\ttemplate: options.prompt,\n\t\t\t\tinputVariables: ['text'],\n\t\t\t});\n\t\t}\n\t}\n\n\t// Stuff prompt override\n\tif (type === 'stuff') {\n\t\tconst stuffArgs = chainArgs as SummarizationChainParams & {\n\t\t\ttype: 'stuff';\n\t\t};\n\t\tif (options.prompt) {\n\t\t\tstuffArgs.prompt = new PromptTemplate({\n\t\t\t\ttemplate: options.prompt,\n\t\t\t\tinputVariables: ['text'],\n\t\t\t});\n\t\t}\n\t}\n\n\t// Refine prompt override\n\tif (type === 'refine') {\n\t\tconst refineArgs = chainArgs as SummarizationChainParams & {\n\t\t\ttype: 'refine';\n\t\t};\n\n\t\tif (options.refinePrompt) {\n\t\t\trefineArgs.refinePrompt = new PromptTemplate({\n\t\t\t\ttemplate: options.refinePrompt,\n\t\t\t\tinputVariables: ['existing_answer', 'text'],\n\t\t\t});\n\t\t}\n\n\t\tif (options.refineQuestionPrompt) {\n\t\t\trefineArgs.questionPrompt = new PromptTemplate({\n\t\t\t\ttemplate: options.refineQuestionPrompt,\n\t\t\t\tinputVariables: ['text'],\n\t\t\t});\n\t\t}\n\t}\n\n\treturn chainArgs;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA+B;AASxB,SAAS,oBACf,MACA,SACC;AACD,QAAM,YAAsC;AAAA,IAC3C;AAAA,EACD;AAEA,MAAI,SAAS,cAAc;AAC1B,UAAM,gBAAgB;AAGtB,QAAI,QAAQ,kBAAkB;AAC7B,oBAAc,mBAAmB,IAAI,8BAAe;AAAA,QACnD,UAAU,QAAQ;AAAA,QAClB,gBAAgB,CAAC,MAAM;AAAA,MACxB,CAAC;AAAA,IACF;AACA,QAAI,QAAQ,QAAQ;AACnB,oBAAc,gBAAgB,IAAI,8BAAe;AAAA,QAChD,UAAU,QAAQ;AAAA,QAClB,gBAAgB,CAAC,MAAM;AAAA,MACxB,CAAC;AAAA,IACF;AAAA,EACD;AAGA,MAAI,SAAS,SAAS;AACrB,UAAM,YAAY;AAGlB,QAAI,QAAQ,QAAQ;AACnB,gBAAU,SAAS,IAAI,8BAAe;AAAA,QACrC,UAAU,QAAQ;AAAA,QAClB,gBAAgB,CAAC,MAAM;AAAA,MACxB,CAAC;AAAA,IACF;AAAA,EACD;AAGA,MAAI,SAAS,UAAU;AACtB,UAAM,aAAa;AAInB,QAAI,QAAQ,cAAc;AACzB,iBAAW,eAAe,IAAI,8BAAe;AAAA,QAC5C,UAAU,QAAQ;AAAA,QAClB,gBAAgB,CAAC,mBAAmB,MAAM;AAAA,MAC3C,CAAC;AAAA,IACF;AAEA,QAAI,QAAQ,sBAAsB;AACjC,iBAAW,iBAAiB,IAAI,8BAAe;AAAA,QAC9C,UAAU,QAAQ;AAAA,QAClB,gBAAgB,CAAC,MAAM;AAAA,MACxB,CAAC;AAAA,IACF;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}