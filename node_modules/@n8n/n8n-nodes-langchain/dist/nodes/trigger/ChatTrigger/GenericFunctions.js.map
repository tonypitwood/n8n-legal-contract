{"version":3,"sources":["../../../../nodes/trigger/ChatTrigger/GenericFunctions.ts"],"sourcesContent":["import basicAuth from 'basic-auth';\nimport type { ICredentialDataDecryptedObject, IWebhookFunctions } from 'n8n-workflow';\n\nimport { ChatTriggerAuthorizationError } from './error';\nimport type { AuthenticationChatOption } from './types';\n\nexport async function validateAuth(context: IWebhookFunctions) {\n\tconst authentication = context.getNodeParameter('authentication') as AuthenticationChatOption;\n\tconst req = context.getRequestObject();\n\tconst headers = context.getHeaderData();\n\n\tif (authentication === 'none') {\n\t\treturn;\n\t} else if (authentication === 'basicAuth') {\n\t\t// Basic authorization is needed to call webhook\n\t\tlet expectedAuth: ICredentialDataDecryptedObject | undefined;\n\t\ttry {\n\t\t\texpectedAuth = await context.getCredentials<ICredentialDataDecryptedObject>('httpBasicAuth');\n\t\t} catch {}\n\n\t\tif (expectedAuth === undefined || !expectedAuth.user || !expectedAuth.password) {\n\t\t\t// Data is not defined on node so can not authenticate\n\t\t\tthrow new ChatTriggerAuthorizationError(500, 'No authentication data defined on node!');\n\t\t}\n\n\t\tconst providedAuth = basicAuth(req);\n\t\t// Authorization data is missing\n\t\tif (!providedAuth) throw new ChatTriggerAuthorizationError(401);\n\n\t\tif (providedAuth.name !== expectedAuth.user || providedAuth.pass !== expectedAuth.password) {\n\t\t\t// Provided authentication data is wrong\n\t\t\tthrow new ChatTriggerAuthorizationError(403);\n\t\t}\n\t} else if (authentication === 'n8nUserAuth') {\n\t\tconst webhookName = context.getWebhookName();\n\n\t\tfunction getCookie(name: string) {\n\t\t\tconst value = `; ${headers.cookie}`;\n\t\t\tconst parts = value.split(`; ${name}=`);\n\n\t\t\tif (parts.length === 2) {\n\t\t\t\treturn parts.pop()?.split(';').shift();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\tconst authCookie = getCookie('n8n-auth');\n\t\tif (!authCookie && webhookName !== 'setup') {\n\t\t\t// Data is not defined on node so can not authenticate\n\t\t\tthrow new ChatTriggerAuthorizationError(500, 'User not authenticated!');\n\t\t}\n\t}\n\n\treturn;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB;AAGtB,mBAA8C;AAG9C,eAAsB,aAAa,SAA4B;AAC9D,QAAM,iBAAiB,QAAQ,iBAAiB,gBAAgB;AAChE,QAAM,MAAM,QAAQ,iBAAiB;AACrC,QAAM,UAAU,QAAQ,cAAc;AAEtC,MAAI,mBAAmB,QAAQ;AAC9B;AAAA,EACD,WAAW,mBAAmB,aAAa;AAE1C,QAAI;AACJ,QAAI;AACH,qBAAe,MAAM,QAAQ,eAA+C,eAAe;AAAA,IAC5F,QAAQ;AAAA,IAAC;AAET,QAAI,iBAAiB,UAAa,CAAC,aAAa,QAAQ,CAAC,aAAa,UAAU;AAE/E,YAAM,IAAI,2CAA8B,KAAK,yCAAyC;AAAA,IACvF;AAEA,UAAM,mBAAe,kBAAAA,SAAU,GAAG;AAElC,QAAI,CAAC,aAAc,OAAM,IAAI,2CAA8B,GAAG;AAE9D,QAAI,aAAa,SAAS,aAAa,QAAQ,aAAa,SAAS,aAAa,UAAU;AAE3F,YAAM,IAAI,2CAA8B,GAAG;AAAA,IAC5C;AAAA,EACD,WAAW,mBAAmB,eAAe;AAG5C,QAASC,aAAT,SAAmB,MAAc;AAChC,YAAM,QAAQ,KAAK,QAAQ,MAAM;AACjC,YAAM,QAAQ,MAAM,MAAM,KAAK,IAAI,GAAG;AAEtC,UAAI,MAAM,WAAW,GAAG;AACvB,eAAO,MAAM,IAAI,GAAG,MAAM,GAAG,EAAE,MAAM;AAAA,MACtC;AACA,aAAO;AAAA,IACR;AARS,oBAAAA;AAFT,UAAM,cAAc,QAAQ,eAAe;AAY3C,UAAM,aAAaA,WAAU,UAAU;AACvC,QAAI,CAAC,cAAc,gBAAgB,SAAS;AAE3C,YAAM,IAAI,2CAA8B,KAAK,yBAAyB;AAAA,IACvE;AAAA,EACD;AAEA;AACD;","names":["basicAuth","getCookie"]}