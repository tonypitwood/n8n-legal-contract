{"version":3,"sources":["../../../nodes/llms/n8nDefaultFailedAttemptHandler.ts"],"sourcesContent":["const STATUS_NO_RETRY = [\n\t400, // Bad Request\n\t401, // Unauthorized\n\t402, // Payment Required\n\t403, // Forbidden\n\t404, // Not Found\n\t405, // Method Not Allowed\n\t406, // Not Acceptable\n\t407, // Proxy Authentication Required\n\t409, // Conflict\n];\n\n/**\n * This function is used as a default handler for failed attempts in all LLMs.\n * It is based on a default handler from the langchain core package.\n * It throws an error when it encounters a known error that should not be retried.\n * @param error\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const n8nDefaultFailedAttemptHandler = (error: any) => {\n\tif (\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n\t\terror?.message?.startsWith?.('Cancel') ||\n\t\terror?.message?.startsWith?.('AbortError') ||\n\t\terror?.name === 'AbortError'\n\t) {\n\t\tthrow error;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\tif (error?.code === 'ECONNABORTED') {\n\t\tthrow error;\n\t}\n\n\tconst status =\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\terror?.response?.status ?? error?.status;\n\tif (status && STATUS_NO_RETRY.includes(+status)) {\n\t\tthrow error;\n\t}\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,kBAAkB;AAAA,EACvB;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AACD;AASO,MAAM,iCAAiC,CAAC,UAAe;AAC7D;AAAA;AAAA,IAEC,OAAO,SAAS,aAAa,QAAQ,KACrC,OAAO,SAAS,aAAa,YAAY,KACzC,OAAO,SAAS;AAAA,IACf;AACD,UAAM;AAAA,EACP;AAGA,MAAI,OAAO,SAAS,gBAAgB;AACnC,UAAM;AAAA,EACP;AAEA,QAAM;AAAA;AAAA,IAEL,OAAO,UAAU,UAAU,OAAO;AAAA;AACnC,MAAI,UAAU,gBAAgB,SAAS,CAAC,MAAM,GAAG;AAChD,UAAM;AAAA,EACP;AACD;","names":[]}