{"version":3,"sources":["../../../../../nodes/llms/LmChatAzureOpenAi/credentials/oauth2.ts"],"sourcesContent":["import { getBearerTokenProvider } from '@azure/identity';\nimport { NodeOperationError, type ISupplyDataFunctions } from 'n8n-workflow';\n\nimport { N8nOAuth2TokenCredential } from './N8nOAuth2TokenCredential';\nimport type {\n\tAzureEntraCognitiveServicesOAuth2ApiCredential,\n\tAzureOpenAIOAuth2ModelConfig,\n} from '../types';\n\nconst AZURE_OPENAI_SCOPE = 'https://cognitiveservices.azure.com/.default';\n/**\n * Creates Entra ID (OAuth2) authentication for Azure OpenAI\n */\nexport async function setupOAuth2Authentication(\n\tthis: ISupplyDataFunctions,\n\tcredentialName: string,\n): Promise<AzureOpenAIOAuth2ModelConfig> {\n\ttry {\n\t\tconst credential =\n\t\t\tawait this.getCredentials<AzureEntraCognitiveServicesOAuth2ApiCredential>(credentialName);\n\t\t// Create a TokenCredential\n\t\tconst entraTokenCredential = new N8nOAuth2TokenCredential(this.getNode(), credential);\n\t\tconst deploymentDetails = await entraTokenCredential.getDeploymentDetails();\n\n\t\t// Use getBearerTokenProvider to create the function LangChain expects\n\t\t// Pass the required scope for Azure Cognitive Services\n\t\tconst azureADTokenProvider = getBearerTokenProvider(entraTokenCredential, AZURE_OPENAI_SCOPE);\n\n\t\tthis.logger.debug('Successfully created Azure AD Token Provider.');\n\n\t\treturn {\n\t\t\tazureADTokenProvider,\n\t\t\tazureOpenAIApiInstanceName: deploymentDetails.resourceName,\n\t\t\tazureOpenAIApiVersion: deploymentDetails.apiVersion,\n\t\t\tazureOpenAIEndpoint: deploymentDetails.endpoint,\n\t\t};\n\t} catch (error) {\n\t\tthis.logger.error(`Error setting up Entra ID authentication: ${error.message}`, error);\n\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t`Error setting up Entra ID authentication: ${error.message}`,\n\t\t\terror,\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuC;AACvC,0BAA8D;AAE9D,sCAAyC;AAMzC,MAAM,qBAAqB;AAI3B,eAAsB,0BAErB,gBACwC;AACxC,MAAI;AACH,UAAM,aACL,MAAM,KAAK,eAA+D,cAAc;AAEzF,UAAM,uBAAuB,IAAI,yDAAyB,KAAK,QAAQ,GAAG,UAAU;AACpF,UAAM,oBAAoB,MAAM,qBAAqB,qBAAqB;AAI1E,UAAM,2BAAuB,wCAAuB,sBAAsB,kBAAkB;AAE5F,SAAK,OAAO,MAAM,+CAA+C;AAEjE,WAAO;AAAA,MACN;AAAA,MACA,4BAA4B,kBAAkB;AAAA,MAC9C,uBAAuB,kBAAkB;AAAA,MACzC,qBAAqB,kBAAkB;AAAA,IACxC;AAAA,EACD,SAAS,OAAO;AACf,SAAK,OAAO,MAAM,6CAA6C,MAAM,OAAO,IAAI,KAAK;AAErF,UAAM,IAAI;AAAA,MACT,KAAK,QAAQ;AAAA,MACb,6CAA6C,MAAM,OAAO;AAAA,MAC1D;AAAA,IACD;AAAA,EACD;AACD;","names":[]}