{"version":3,"sources":["../../../nodes/llms/n8nLlmFailedAttemptHandler.ts"],"sourcesContent":["import type { FailedAttemptHandler } from '@langchain/core/dist/utils/async_caller';\nimport type { ISupplyDataFunctions, JsonObject } from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport { n8nDefaultFailedAttemptHandler } from './n8nDefaultFailedAttemptHandler';\n\n/**\n * This function returns a custom failed attempt handler for using with LangChain models.\n * It first tries to use a custom handler passed as an argument, and if that doesn't throw an error, it uses the default handler.\n * It always wraps the error in a NodeApiError.\n * It throws an error ONLY if there are no retries left.\n */\nexport const makeN8nLlmFailedAttemptHandler = (\n\tctx: ISupplyDataFunctions,\n\thandler?: FailedAttemptHandler,\n): FailedAttemptHandler => {\n\treturn (error: any) => {\n\t\ttry {\n\t\t\t// Try custom error handler first\n\t\t\thandler?.(error);\n\n\t\t\t// If it didn't throw an error, use the default handler\n\t\t\tn8nDefaultFailedAttemptHandler(error);\n\t\t} catch (e) {\n\t\t\t// Wrap the error in a NodeApiError\n\t\t\tconst apiError = new NodeApiError(ctx.getNode(), e as unknown as JsonObject, {\n\t\t\t\tfunctionality: 'configuration-node',\n\t\t\t});\n\n\t\t\tthrow apiError;\n\t\t}\n\n\t\t// If no error was thrown, check if it is the last retry\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tif (error?.retriesLeft > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are no retries left, throw the error wrapped in a NodeApiError\n\t\tconst apiError = new NodeApiError(ctx.getNode(), error as unknown as JsonObject, {\n\t\t\tfunctionality: 'configuration-node',\n\t\t});\n\n\t\tthrow apiError;\n\t};\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,0BAA6B;AAE7B,4CAA+C;AAQxC,MAAM,iCAAiC,CAC7C,KACA,YAC0B;AAC1B,SAAO,CAAC,UAAe;AACtB,QAAI;AAEH,gBAAU,KAAK;AAGf,gFAA+B,KAAK;AAAA,IACrC,SAAS,GAAG;AAEX,YAAMA,YAAW,IAAI,iCAAa,IAAI,QAAQ,GAAG,GAA4B;AAAA,QAC5E,eAAe;AAAA,MAChB,CAAC;AAED,YAAMA;AAAA,IACP;AAIA,QAAI,OAAO,cAAc,GAAG;AAC3B;AAAA,IACD;AAGA,UAAM,WAAW,IAAI,iCAAa,IAAI,QAAQ,GAAG,OAAgC;AAAA,MAChF,eAAe;AAAA,IAChB,CAAC;AAED,UAAM;AAAA,EACP;AACD;","names":["apiError"]}