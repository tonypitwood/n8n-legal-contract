{"version":3,"sources":["../../../../../../../../nodes/agents/Agent/agents/SqlAgent/other/handlers/postgres.ts"],"sourcesContent":["import { DataSource } from '@n8n/typeorm';\nimport type { PostgresNodeCredentials } from 'n8n-nodes-base/dist/nodes/Postgres/v2/helpers/interfaces';\nimport { type IExecuteFunctions } from 'n8n-workflow';\nimport type { TlsOptions } from 'tls';\n\nexport async function getPostgresDataSource(this: IExecuteFunctions): Promise<DataSource> {\n\tconst credentials = await this.getCredentials<PostgresNodeCredentials>('postgres');\n\n\tlet ssl: TlsOptions | boolean = !['disable', undefined].includes(credentials.ssl);\n\tif (credentials.allowUnauthorizedCerts && ssl) {\n\t\tssl = { rejectUnauthorized: false };\n\t}\n\n\treturn new DataSource({\n\t\ttype: 'postgres',\n\t\thost: credentials.host,\n\t\tport: credentials.port,\n\t\tusername: credentials.user,\n\t\tpassword: credentials.password,\n\t\tdatabase: credentials.database,\n\t\tssl,\n\t});\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA2B;AAK3B,eAAsB,wBAAoE;AACzF,QAAM,cAAc,MAAM,KAAK,eAAwC,UAAU;AAEjF,MAAI,MAA4B,CAAC,CAAC,WAAW,MAAS,EAAE,SAAS,YAAY,GAAG;AAChF,MAAI,YAAY,0BAA0B,KAAK;AAC9C,UAAM,EAAE,oBAAoB,MAAM;AAAA,EACnC;AAEA,SAAO,IAAI,0BAAW;AAAA,IACrB,MAAM;AAAA,IACN,MAAM,YAAY;AAAA,IAClB,MAAM,YAAY;AAAA,IAClB,UAAU,YAAY;AAAA,IACtB,UAAU,YAAY;AAAA,IACtB,UAAU,YAAY;AAAA,IACtB;AAAA,EACD,CAAC;AACF;","names":[]}