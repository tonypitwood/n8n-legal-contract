{"version":3,"sources":["../../../../../nodes/agents/Agent/agents/utils.ts"],"sourcesContent":["import type { BaseOutputParser } from '@langchain/core/output_parsers';\nimport type { DynamicStructuredTool, Tool } from 'langchain/tools';\nimport { NodeOperationError, type IExecuteFunctions, type INode } from 'n8n-workflow';\n\nimport type { ZodObjectAny } from '../../../../types/types';\n\nexport async function extractParsedOutput(\n\tctx: IExecuteFunctions,\n\toutputParser: BaseOutputParser<unknown>,\n\toutput: string,\n): Promise<Record<string, unknown> | undefined> {\n\tconst parsedOutput = (await outputParser.parse(output)) as {\n\t\toutput: Record<string, unknown>;\n\t};\n\n\tif (ctx.getNode().typeVersion <= 1.6) {\n\t\treturn parsedOutput;\n\t}\n\t// For 1.7 and above, we try to extract the output from the parsed output\n\t// with fallback to the original output if it's not present\n\treturn parsedOutput?.output ?? parsedOutput;\n}\n\nexport async function checkForStructuredTools(\n\ttools: Array<Tool | DynamicStructuredTool<ZodObjectAny>>,\n\tnode: INode,\n\tcurrentAgentType: string,\n) {\n\tconst dynamicStructuredTools = tools.filter(\n\t\t(tool) => tool.constructor.name === 'DynamicStructuredTool',\n\t);\n\tif (dynamicStructuredTools.length > 0) {\n\t\tconst getToolName = (tool: Tool | DynamicStructuredTool) => `\"${tool.name}\"`;\n\t\tthrow new NodeOperationError(\n\t\t\tnode,\n\t\t\t`The selected tools are not supported by \"${currentAgentType}\", please use \"Tools Agent\" instead`,\n\t\t\t{\n\t\t\t\titemIndex: 0,\n\t\t\t\tdescription: `Incompatible connected tools: ${dynamicStructuredTools.map(getToolName).join(', ')}`,\n\t\t\t},\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,0BAAuE;AAIvE,eAAsB,oBACrB,KACA,cACA,QAC+C;AAC/C,QAAM,eAAgB,MAAM,aAAa,MAAM,MAAM;AAIrD,MAAI,IAAI,QAAQ,EAAE,eAAe,KAAK;AACrC,WAAO;AAAA,EACR;AAGA,SAAO,cAAc,UAAU;AAChC;AAEA,eAAsB,wBACrB,OACA,MACA,kBACC;AACD,QAAM,yBAAyB,MAAM;AAAA,IACpC,CAAC,SAAS,KAAK,YAAY,SAAS;AAAA,EACrC;AACA,MAAI,uBAAuB,SAAS,GAAG;AACtC,UAAM,cAAc,CAAC,SAAuC,IAAI,KAAK,IAAI;AACzE,UAAM,IAAI;AAAA,MACT;AAAA,MACA,4CAA4C,gBAAgB;AAAA,MAC5D;AAAA,QACC,WAAW;AAAA,QACX,aAAa,iCAAiC,uBAAuB,IAAI,WAAW,EAAE,KAAK,IAAI,CAAC;AAAA,MACjG;AAAA,IACD;AAAA,EACD;AACD;","names":[]}