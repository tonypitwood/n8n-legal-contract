{"version":3,"sources":["../../../nodes/ToolExecutor/ToolExecutor.node.ts"],"sourcesContent":["import { Tool, StructuredTool } from '@langchain/core/tools';\nimport type { Toolkit } from 'langchain/agents';\nimport type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { executeTool } from './utils/executeTool';\n\nexport class ToolExecutor implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Tool Executor',\n\t\tname: 'toolExecutor',\n\t\tversion: 1,\n\t\tdefaults: {\n\t\t\tname: 'Tool Executor',\n\t\t},\n\t\thidden: true,\n\t\tinputs: [NodeConnectionTypes.Main, NodeConnectionTypes.AiTool],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Query',\n\t\t\t\tname: 'query',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tdescription: 'Parameters to pass to the tool as JSON or string',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tool Name',\n\t\t\t\tname: 'toolName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Name of the tool to execute if the connected tool is a toolkit',\n\t\t\t},\n\t\t],\n\t\tgroup: ['transform'],\n\t\tdescription: 'Node to execute tools without an AI Agent',\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst query = this.getNodeParameter('query', 0, {}) as string | object;\n\t\tconst toolName = this.getNodeParameter('toolName', 0, '') as string;\n\n\t\tlet parsedQuery: string | object;\n\n\t\ttry {\n\t\t\tparsedQuery = typeof query === 'string' ? JSON.parse(query) : query;\n\t\t} catch (error) {\n\t\t\tparsedQuery = query;\n\t\t}\n\n\t\tconst resultData: INodeExecutionData[] = [];\n\t\tconst toolInputs = await this.getInputConnectionData(NodeConnectionTypes.AiTool, 0);\n\n\t\tif (!toolInputs || !Array.isArray(toolInputs)) {\n\t\t\tthrow new NodeOperationError(this.getNode(), 'No tool inputs found');\n\t\t}\n\n\t\ttry {\n\t\t\tfor (const tool of toolInputs) {\n\t\t\t\t// Handle toolkits\n\t\t\t\tif (tool && typeof (tool as Toolkit).getTools === 'function') {\n\t\t\t\t\tconst toolsInToolkit = (tool as Toolkit).getTools();\n\t\t\t\t\tfor (const toolkitTool of toolsInToolkit) {\n\t\t\t\t\t\tif (toolkitTool instanceof Tool || toolkitTool instanceof StructuredTool) {\n\t\t\t\t\t\t\tif (toolName === toolkitTool.name) {\n\t\t\t\t\t\t\t\tconst result = await executeTool(toolkitTool, parsedQuery);\n\t\t\t\t\t\t\t\tresultData.push(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Handle single tool\n\t\t\t\t\tif (!toolName || toolName === tool.name) {\n\t\t\t\t\t\tconst result = await executeTool(tool, parsedQuery);\n\t\t\t\t\t\tresultData.push(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t`Error executing tool: ${(error as Error).message}`,\n\t\t\t);\n\t\t}\n\t\treturn [resultData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAQrC,0BAAwD;AAExD,yBAA4B;AAErB,MAAM,aAAkC;AAAA,EAAxC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ,CAAC,wCAAoB,MAAM,wCAAoB,MAAM;AAAA,MAC7D,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,MACD;AAAA,MACA,OAAO,CAAC,WAAW;AAAA,MACnB,aAAa;AAAA,IACd;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,iBAAiB,SAAS,GAAG,CAAC,CAAC;AAClD,UAAM,WAAW,KAAK,iBAAiB,YAAY,GAAG,EAAE;AAExD,QAAI;AAEJ,QAAI;AACH,oBAAc,OAAO,UAAU,WAAW,KAAK,MAAM,KAAK,IAAI;AAAA,IAC/D,SAAS,OAAO;AACf,oBAAc;AAAA,IACf;AAEA,UAAM,aAAmC,CAAC;AAC1C,UAAM,aAAa,MAAM,KAAK,uBAAuB,wCAAoB,QAAQ,CAAC;AAElF,QAAI,CAAC,cAAc,CAAC,MAAM,QAAQ,UAAU,GAAG;AAC9C,YAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sBAAsB;AAAA,IACpE;AAEA,QAAI;AACH,iBAAW,QAAQ,YAAY;AAE9B,YAAI,QAAQ,OAAQ,KAAiB,aAAa,YAAY;AAC7D,gBAAM,iBAAkB,KAAiB,SAAS;AAClD,qBAAW,eAAe,gBAAgB;AACzC,gBAAI,uBAAuB,qBAAQ,uBAAuB,6BAAgB;AACzE,kBAAI,aAAa,YAAY,MAAM;AAClC,sBAAM,SAAS,UAAM,gCAAY,aAAa,WAAW;AACzD,2BAAW,KAAK,MAAM;AAAA,cACvB;AAAA,YACD;AAAA,UACD;AAAA,QACD,OAAO;AAEN,cAAI,CAAC,YAAY,aAAa,KAAK,MAAM;AACxC,kBAAM,SAAS,UAAM,gCAAY,MAAM,WAAW;AAClD,uBAAW,KAAK,MAAM;AAAA,UACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,YAAM,IAAI;AAAA,QACT,KAAK,QAAQ;AAAA,QACb,yBAA0B,MAAgB,OAAO;AAAA,MAClD;AAAA,IACD;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}