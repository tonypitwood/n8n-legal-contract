{"version":3,"sources":["../../../../nodes/vector_store/VectorStoreZep/VectorStoreZep.node.ts"],"sourcesContent":["import { ZepVectorStore } from '@langchain/community/vectorstores/zep';\nimport { ZepCloudVectorStore } from '@langchain/community/vectorstores/zep_cloud';\nimport type { IDataObject, INodeProperties } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { metadataFilterField } from '@utils/sharedFields';\n\nimport { createVectorStoreNode } from '../shared/createVectorStoreNode/createVectorStoreNode';\n\nconst embeddingDimensions: INodeProperties = {\n\tdisplayName: 'Embedding Dimensions',\n\tname: 'embeddingDimensions',\n\ttype: 'number',\n\tdefault: 1536,\n\tdescription: 'Whether to allow using characters from the Unicode surrogate blocks',\n};\n\nconst insertFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\tembeddingDimensions,\n\t\t\t{\n\t\t\t\tdisplayName: 'Is Auto Embedded',\n\t\t\t\tname: 'isAutoEmbedded',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: 'Whether to automatically embed documents when they are added',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst retrieveFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Option',\n\t\tdefault: {},\n\t\toptions: [embeddingDimensions, metadataFilterField],\n\t},\n];\n\nexport class VectorStoreZep extends createVectorStoreNode<ZepVectorStore | ZepCloudVectorStore>({\n\tmeta: {\n\t\tdisplayName: 'Zep Vector Store',\n\t\tname: 'vectorStoreZep',\n\t\thidden: true,\n\t\tdescription: 'Work with your data in Zep Vector Store',\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'zepApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\ticon: 'file:zep.png',\n\t\tdocsUrl:\n\t\t\t'https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorezep/',\n\t},\n\tsharedFields: [\n\t\t{\n\t\t\tdisplayName: 'This Zep integration is deprecated and will be removed in a future version.',\n\t\t\tname: 'deprecationNotice',\n\t\t\ttype: 'notice',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Collection Name',\n\t\t\tname: 'collectionName',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tinsertFields,\n\tloadFields: retrieveFields,\n\tretrieveFields,\n\tasync getVectorStoreClient(context, filter, embeddings, itemIndex) {\n\t\tconst collectionName = context.getNodeParameter('collectionName', itemIndex) as string;\n\n\t\tconst options =\n\t\t\t(context.getNodeParameter('options', itemIndex) as {\n\t\t\t\tembeddingDimensions?: number;\n\t\t\t}) || {};\n\n\t\tconst credentials = await context.getCredentials<{\n\t\t\tapiKey?: string;\n\t\t\tapiUrl: string;\n\t\t\tcloud: boolean;\n\t\t}>('zepApi');\n\n\t\tconst zepConfig = {\n\t\t\tapiKey: credentials.apiKey,\n\t\t\tcollectionName,\n\t\t\tembeddingDimensions: options.embeddingDimensions ?? 1536,\n\t\t\tmetadata: filter,\n\t\t};\n\n\t\tif (credentials.cloud) {\n\t\t\treturn new ZepCloudVectorStore(embeddings, zepConfig);\n\t\t} else {\n\t\t\treturn new ZepVectorStore(embeddings, { ...zepConfig, apiUrl: credentials.apiUrl });\n\t\t}\n\t},\n\tasync populateVectorStore(context, embeddings, documents, itemIndex) {\n\t\tconst collectionName = context.getNodeParameter('collectionName', itemIndex) as string;\n\t\tconst options =\n\t\t\t(context.getNodeParameter('options', itemIndex) as {\n\t\t\t\tisAutoEmbedded?: boolean;\n\t\t\t\tembeddingDimensions?: number;\n\t\t\t}) || {};\n\n\t\tconst credentials = await context.getCredentials<{\n\t\t\tapiKey?: string;\n\t\t\tapiUrl: string;\n\t\t\tcloud: boolean;\n\t\t}>('zepApi');\n\n\t\tconst zepConfig = {\n\t\t\tapiKey: credentials.apiKey,\n\t\t\tcollectionName,\n\t\t\tembeddingDimensions: options.embeddingDimensions ?? 1536,\n\t\t\tisAutoEmbedded: options.isAutoEmbedded ?? true,\n\t\t};\n\n\t\ttry {\n\t\t\tif (credentials.cloud) {\n\t\t\t\tawait ZepCloudVectorStore.fromDocuments(documents, embeddings, zepConfig);\n\t\t\t} else {\n\t\t\t\tawait ZepVectorStore.fromDocuments(documents, embeddings, {\n\t\t\t\t\t...zepConfig,\n\t\t\t\t\tapiUrl: credentials.apiUrl,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst errorCode = (error as IDataObject).code as number;\n\t\t\tconst responseData = (error as IDataObject).responseData as string;\n\t\t\tif (errorCode === 400 && responseData.includes('CreateDocumentCollectionRequest')) {\n\t\t\t\tthrow new NodeOperationError(context.getNode(), `Collection ${collectionName} not found`, {\n\t\t\t\t\titemIndex,\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Please check that the collection exists in your vector store, or make sure that collection name contains only alphanumeric characters',\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new NodeOperationError(context.getNode(), error as Error, { itemIndex });\n\t\t}\n\t},\n}) {}\n"],"mappings":"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","names":[]}