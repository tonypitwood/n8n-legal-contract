{"version":3,"sources":["../../../../../nodes/vector_store/shared/MemoryManager/config.ts"],"sourcesContent":["import type { MemoryVectorStoreConfig } from './types';\n\n// Defaults\nconst DEFAULT_MAX_MEMORY_MB = -1;\nconst DEFAULT_INACTIVE_TTL_HOURS = -1;\n\n/**\n * Helper function to get the configuration from environment variables\n */\nexport function getConfig(): MemoryVectorStoreConfig {\n\t// Get memory limit from env var or use default\n\tlet maxMemoryMB = DEFAULT_MAX_MEMORY_MB;\n\tif (process.env.N8N_VECTOR_STORE_MAX_MEMORY) {\n\t\tconst parsed = parseInt(process.env.N8N_VECTOR_STORE_MAX_MEMORY, 10);\n\t\tif (!isNaN(parsed)) {\n\t\t\tmaxMemoryMB = parsed;\n\t\t}\n\t}\n\n\t// Get TTL from env var or use default\n\tlet ttlHours = DEFAULT_INACTIVE_TTL_HOURS;\n\tif (process.env.N8N_VECTOR_STORE_TTL_HOURS) {\n\t\tconst parsed = parseInt(process.env.N8N_VECTOR_STORE_TTL_HOURS, 10);\n\t\tif (!isNaN(parsed)) {\n\t\t\tttlHours = parsed;\n\t\t}\n\t}\n\n\treturn {\n\t\tmaxMemoryMB,\n\t\tttlHours,\n\t};\n}\n\n/**\n * Convert memory size from MB to bytes\n */\nexport function mbToBytes(mb: number): number {\n\t// -1 - \"unlimited\"\n\tif (mb <= 0) return -1;\n\treturn mb * 1024 * 1024;\n}\n\n/**\n * Convert TTL from hours to milliseconds\n */\nexport function hoursToMs(hours: number): number {\n\t// -1 - \"disabled\"\n\tif (hours <= 0) return -1;\n\treturn hours * 60 * 60 * 1000;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,MAAM,wBAAwB;AAC9B,MAAM,6BAA6B;AAK5B,SAAS,YAAqC;AAEpD,MAAI,cAAc;AAClB,MAAI,QAAQ,IAAI,6BAA6B;AAC5C,UAAM,SAAS,SAAS,QAAQ,IAAI,6BAA6B,EAAE;AACnE,QAAI,CAAC,MAAM,MAAM,GAAG;AACnB,oBAAc;AAAA,IACf;AAAA,EACD;AAGA,MAAI,WAAW;AACf,MAAI,QAAQ,IAAI,4BAA4B;AAC3C,UAAM,SAAS,SAAS,QAAQ,IAAI,4BAA4B,EAAE;AAClE,QAAI,CAAC,MAAM,MAAM,GAAG;AACnB,iBAAW;AAAA,IACZ;AAAA,EACD;AAEA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,EACD;AACD;AAKO,SAAS,UAAU,IAAoB;AAE7C,MAAI,MAAM,EAAG,QAAO;AACpB,SAAO,KAAK,OAAO;AACpB;AAKO,SAAS,UAAU,OAAuB;AAEhD,MAAI,SAAS,EAAG,QAAO;AACvB,SAAO,QAAQ,KAAK,KAAK;AAC1B;","names":[]}