{"version":3,"sources":["../../../../nodes/vector_store/VectorStorePineconeLoad/VectorStorePineconeLoad.node.ts"],"sourcesContent":["import type { Embeddings } from '@langchain/core/embeddings';\nimport type { PineconeStoreParams } from '@langchain/pinecone';\nimport { PineconeStore } from '@langchain/pinecone';\nimport { Pinecone } from '@pinecone-database/pinecone';\nimport {\n\tNodeConnectionTypes,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype ISupplyDataFunctions,\n\ttype SupplyData,\n} from 'n8n-workflow';\n\nimport { getMetadataFiltersValues } from '@utils/helpers';\nimport { logWrapper } from '@utils/logWrapper';\nimport { metadataFilterField } from '@utils/sharedFields';\n\nimport { pineconeIndexSearch } from '../shared/createVectorStoreNode/methods/listSearch';\nimport { pineconeIndexRLC } from '../shared/descriptions';\n\n// This node is deprecated. Use VectorStorePinecone instead.\nexport class VectorStorePineconeLoad implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Pinecone: Load',\n\t\t// Vector Store nodes got merged into a single node\n\t\thidden: true,\n\t\tname: 'vectorStorePineconeLoad',\n\t\ticon: 'file:pinecone.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Load data from Pinecone Vector Store index',\n\t\tdefaults: {\n\t\t\tname: 'Pinecone: Load',\n\t\t},\n\t\tcodex: {\n\t\t\tcategories: ['AI'],\n\t\t\tsubcategories: {\n\t\t\t\tAI: ['Vector Stores'],\n\t\t\t},\n\t\t\tresources: {\n\t\t\t\tprimaryDocumentation: [\n\t\t\t\t\t{\n\t\t\t\t\t\turl: 'https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorepinecone/',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'pineconeApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Embedding',\n\t\t\t\tmaxConnections: 1,\n\t\t\t\ttype: NodeConnectionTypes.AiEmbedding,\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\toutputs: [NodeConnectionTypes.AiVectorStore],\n\t\toutputNames: ['Vector Store'],\n\t\tproperties: [\n\t\t\tpineconeIndexRLC,\n\t\t\t{\n\t\t\t\tdisplayName: 'Pinecone Namespace',\n\t\t\t\tname: 'pineconeNamespace',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [metadataFilterField],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tpineconeIndexSearch,\n\t\t},\n\t};\n\n\tasync supplyData(this: ISupplyDataFunctions, itemIndex: number): Promise<SupplyData> {\n\t\tthis.logger.debug('Supplying data for Pinecone Load Vector Store');\n\n\t\tconst namespace = this.getNodeParameter('pineconeNamespace', itemIndex) as string;\n\t\tconst index = this.getNodeParameter('pineconeIndex', itemIndex, '', {\n\t\t\textractValue: true,\n\t\t}) as string;\n\n\t\tconst credentials = await this.getCredentials('pineconeApi');\n\t\tconst embeddings = (await this.getInputConnectionData(\n\t\t\tNodeConnectionTypes.AiEmbedding,\n\t\t\titemIndex,\n\t\t)) as Embeddings;\n\n\t\tconst client = new Pinecone({\n\t\t\tapiKey: credentials.apiKey as string,\n\t\t});\n\n\t\tconst pineconeIndex = client.Index(index);\n\t\tconst config: PineconeStoreParams = {\n\t\t\tnamespace: namespace || undefined,\n\t\t\tpineconeIndex,\n\t\t\tfilter: getMetadataFiltersValues(this, itemIndex),\n\t\t};\n\n\t\tconst vectorStore = await PineconeStore.fromExistingIndex(embeddings, config);\n\n\t\treturn {\n\t\t\tresponse: logWrapper(vectorStore, this),\n\t\t};\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,sBAA8B;AAC9B,IAAAA,mBAAyB;AACzB,0BAMO;AAEP,qBAAyC;AACzC,wBAA2B;AAC3B,0BAAoC;AAEpC,wBAAoC;AACpC,0BAAiC;AAG1B,MAAM,wBAA6C;AAAA,EAAnD;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA;AAAA,MAEb,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,WAAW;AAAA,MACnB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,OAAO;AAAA,QACN,YAAY,CAAC,IAAI;AAAA,QACjB,eAAe;AAAA,UACd,IAAI,CAAC,eAAe;AAAA,QACrB;AAAA,QACA,WAAW;AAAA,UACV,sBAAsB;AAAA,YACrB;AAAA,cACC,KAAK;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,QAAQ;AAAA,QACP;AAAA,UACC,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,MAAM,wCAAoB;AAAA,UAC1B,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,SAAS,CAAC,wCAAoB,aAAa;AAAA,MAC3C,aAAa,CAAC,cAAc;AAAA,MAC5B,YAAY;AAAA,QACX;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,UACb,SAAS,CAAC;AAAA,UACV,SAAS,CAAC,uCAAmB;AAAA,QAC9B;AAAA,MACD;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,YAAY;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,WAAuC,WAAwC;AACpF,SAAK,OAAO,MAAM,+CAA+C;AAEjE,UAAM,YAAY,KAAK,iBAAiB,qBAAqB,SAAS;AACtE,UAAM,QAAQ,KAAK,iBAAiB,iBAAiB,WAAW,IAAI;AAAA,MACnE,cAAc;AAAA,IACf,CAAC;AAED,UAAM,cAAc,MAAM,KAAK,eAAe,aAAa;AAC3D,UAAM,aAAc,MAAM,KAAK;AAAA,MAC9B,wCAAoB;AAAA,MACpB;AAAA,IACD;AAEA,UAAM,SAAS,IAAI,0BAAS;AAAA,MAC3B,QAAQ,YAAY;AAAA,IACrB,CAAC;AAED,UAAM,gBAAgB,OAAO,MAAM,KAAK;AACxC,UAAM,SAA8B;AAAA,MACnC,WAAW,aAAa;AAAA,MACxB;AAAA,MACA,YAAQ,yCAAyB,MAAM,SAAS;AAAA,IACjD;AAEA,UAAM,cAAc,MAAM,8BAAc,kBAAkB,YAAY,MAAM;AAE5E,WAAO;AAAA,MACN,cAAU,8BAAW,aAAa,IAAI;AAAA,IACvC;AAAA,EACD;AACD;","names":["import_pinecone"]}