/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 */
export interface StringEquals {
    equalTo: boolean;
    caseInsensitive?: boolean;
    [k: string]: any;
}
export interface StringContains {
    contains: string;
    [k: string]: any;
}
export interface RegularExpressionMatch {
    matches: string;
    [k: string]: any;
}
export interface NegativeRegularExpressionMatch {
    doesNotMatch: string;
    [k: string]: any;
}
export interface JSONEquals {
    equalToJson: string;
    [k: string]: any;
}
export interface JSONPathMatch {
    matchesJsonPath: string;
    ignoreArrayOrder?: boolean;
    ignoreExtraElements?: boolean;
    [k: string]: any;
}
export interface XMLEquality {
    equalToXml: string;
    [k: string]: any;
}
export interface XPathMatch {
    matchesXpath: string;
    namespaces?: {
        [k: string]: any;
    };
    valuePattern?: {
        [k: string]: any;
    };
    [k: string]: any;
}
export declare type ContentPattern = StringEquals | StringContains | RegularExpressionMatch | NegativeRegularExpressionMatch | JSONEquals | JSONPathMatch | XMLEquality | XPathMatch;
