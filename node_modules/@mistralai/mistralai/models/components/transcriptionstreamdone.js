"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TranscriptionStreamDone$ = exports.TranscriptionStreamDone$outboundSchema = exports.TranscriptionStreamDone$inboundSchema = exports.TranscriptionStreamDoneType$ = exports.TranscriptionStreamDoneType$outboundSchema = exports.TranscriptionStreamDoneType$inboundSchema = exports.TranscriptionStreamDoneType = void 0;
exports.transcriptionStreamDoneToJSON = transcriptionStreamDoneToJSON;
exports.transcriptionStreamDoneFromJSON = transcriptionStreamDoneFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const transcriptionsegmentchunk_js_1 = require("./transcriptionsegmentchunk.js");
const usageinfo_js_1 = require("./usageinfo.js");
exports.TranscriptionStreamDoneType = {
    TranscriptionDone: "transcription.done",
};
/** @internal */
exports.TranscriptionStreamDoneType$inboundSchema = z.nativeEnum(exports.TranscriptionStreamDoneType);
/** @internal */
exports.TranscriptionStreamDoneType$outboundSchema = exports.TranscriptionStreamDoneType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TranscriptionStreamDoneType$;
(function (TranscriptionStreamDoneType$) {
    /** @deprecated use `TranscriptionStreamDoneType$inboundSchema` instead. */
    TranscriptionStreamDoneType$.inboundSchema = exports.TranscriptionStreamDoneType$inboundSchema;
    /** @deprecated use `TranscriptionStreamDoneType$outboundSchema` instead. */
    TranscriptionStreamDoneType$.outboundSchema = exports.TranscriptionStreamDoneType$outboundSchema;
})(TranscriptionStreamDoneType$ || (exports.TranscriptionStreamDoneType$ = TranscriptionStreamDoneType$ = {}));
/** @internal */
exports.TranscriptionStreamDone$inboundSchema = (0, schemas_js_1.collectExtraKeys)(z.object({
    model: z.string(),
    text: z.string(),
    segments: z.array(transcriptionsegmentchunk_js_1.TranscriptionSegmentChunk$inboundSchema).optional(),
    usage: usageinfo_js_1.UsageInfo$inboundSchema,
    type: exports.TranscriptionStreamDoneType$inboundSchema.default("transcription.done"),
    language: z.nullable(z.string()),
}).catchall(z.any()), "additionalProperties", true);
/** @internal */
exports.TranscriptionStreamDone$outboundSchema = z.object({
    model: z.string(),
    text: z.string(),
    segments: z.array(transcriptionsegmentchunk_js_1.TranscriptionSegmentChunk$outboundSchema).optional(),
    usage: usageinfo_js_1.UsageInfo$outboundSchema,
    type: exports.TranscriptionStreamDoneType$outboundSchema.default("transcription.done"),
    language: z.nullable(z.string()),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...(0, primitives_js_1.remap)(v, {
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TranscriptionStreamDone$;
(function (TranscriptionStreamDone$) {
    /** @deprecated use `TranscriptionStreamDone$inboundSchema` instead. */
    TranscriptionStreamDone$.inboundSchema = exports.TranscriptionStreamDone$inboundSchema;
    /** @deprecated use `TranscriptionStreamDone$outboundSchema` instead. */
    TranscriptionStreamDone$.outboundSchema = exports.TranscriptionStreamDone$outboundSchema;
})(TranscriptionStreamDone$ || (exports.TranscriptionStreamDone$ = TranscriptionStreamDone$ = {}));
function transcriptionStreamDoneToJSON(transcriptionStreamDone) {
    return JSON.stringify(exports.TranscriptionStreamDone$outboundSchema.parse(transcriptionStreamDone));
}
function transcriptionStreamDoneFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.TranscriptionStreamDone$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TranscriptionStreamDone' from JSON`);
}
//# sourceMappingURL=transcriptionstreamdone.js.map