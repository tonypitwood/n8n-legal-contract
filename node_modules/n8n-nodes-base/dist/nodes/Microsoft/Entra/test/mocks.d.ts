export declare const microsoftEntraApiResponse: {
    postGroup: {
        '@odata.context': string;
        id: string;
        deletedDateTime: null;
        classification: null;
        createdDateTime: string;
        creationOptions: never[];
        description: null;
        displayName: string;
        expirationDateTime: null;
        groupTypes: string[];
        isAssignableToRole: boolean;
        mail: null;
        mailEnabled: boolean;
        mailNickname: string;
        membershipRule: string;
        membershipRuleProcessingState: string;
        onPremisesDomainName: null;
        onPremisesLastSyncDateTime: null;
        onPremisesNetBiosName: null;
        onPremisesSamAccountName: null;
        onPremisesSecurityIdentifier: null;
        onPremisesSyncEnabled: null;
        preferredDataLocation: null;
        preferredLanguage: null;
        proxyAddresses: never[];
        renewedDateTime: string;
        resourceBehaviorOptions: never[];
        resourceProvisioningOptions: never[];
        securityEnabled: boolean;
        securityIdentifier: string;
        theme: null;
        uniqueName: null;
        visibility: null;
        onPremisesProvisioningErrors: never[];
        serviceProvisioningErrors: never[];
    };
    getGroup: {
        '@odata.context': string;
        id: string;
        deletedDateTime: null;
        classification: null;
        createdDateTime: string;
        creationOptions: string[];
        description: string;
        displayName: string;
        expirationDateTime: null;
        groupTypes: string[];
        isAssignableToRole: null;
        mail: string;
        mailEnabled: boolean;
        mailNickname: string;
        membershipRule: string;
        membershipRuleProcessingState: string;
        onPremisesDomainName: null;
        onPremisesLastSyncDateTime: null;
        onPremisesNetBiosName: null;
        onPremisesSamAccountName: null;
        onPremisesSecurityIdentifier: null;
        onPremisesSyncEnabled: null;
        preferredDataLocation: null;
        preferredLanguage: null;
        proxyAddresses: string[];
        renewedDateTime: string;
        resourceBehaviorOptions: string[];
        resourceProvisioningOptions: never[];
        securityEnabled: boolean;
        securityIdentifier: string;
        theme: null;
        uniqueName: null;
        visibility: string;
        onPremisesProvisioningErrors: never[];
        serviceProvisioningErrors: never[];
    };
    getGroupWithProperties: {
        '@odata.context': string;
        createdDateTime: string;
        classification: null;
        deletedDateTime: null;
        description: string;
        displayName: string;
        expirationDateTime: null;
        groupTypes: string[];
        visibility: string;
        theme: null;
        uniqueName: null;
        securityIdentifier: string;
        renewedDateTime: string;
        securityEnabled: boolean;
        isManagementRestricted: null;
        isAssignableToRole: null;
        id: string;
        onPremisesSecurityIdentifier: null;
        onPremisesSamAccountName: null;
        onPremisesNetBiosName: null;
        onPremisesSyncEnabled: null;
        preferredDataLocation: null;
        preferredLanguage: null;
        proxyAddresses: string[];
        onPremisesLastSyncDateTime: null;
        onPremisesDomainName: null;
        membershipRule: string;
        membershipRuleProcessingState: string;
        mailNickname: string;
        mailEnabled: boolean;
        mail: string;
        licenseProcessingState: null;
        allowExternalSenders: boolean;
        autoSubscribeNewMembers: boolean;
        isSubscribedByMail: boolean;
        unseenCount: number;
        hideFromOutlookClients: boolean;
        hideFromAddressLists: boolean;
        assignedLabels: never[];
        assignedLicenses: never[];
        serviceProvisioningErrors: never[];
        onPremisesProvisioningErrors: never[];
        members: {
            '@odata.type': string;
            id: string;
            deletedDateTime: null;
            accountEnabled: boolean;
            ageGroup: null;
            businessPhones: string[];
            city: null;
            companyName: null;
            consentProvidedForMinor: null;
            country: string;
            createdDateTime: string;
            creationType: null;
            department: null;
            displayName: string;
            employeeId: null;
            employeeHireDate: null;
            employeeLeaveDateTime: null;
            employeeType: null;
            externalUserState: null;
            externalUserStateChangeDateTime: null;
            faxNumber: null;
            givenName: string;
            isLicenseReconciliationNeeded: boolean;
            jobTitle: null;
            legalAgeGroupClassification: null;
            mail: string;
            mailNickname: string;
            mobilePhone: null;
            onPremisesDistinguishedName: null;
            onPremisesDomainName: null;
            onPremisesImmutableId: null;
            onPremisesLastSyncDateTime: null;
            onPremisesSecurityIdentifier: null;
            onPremisesSamAccountName: null;
            onPremisesSyncEnabled: null;
            onPremisesUserPrincipalName: null;
            otherMails: string[];
            passwordPolicies: null;
            officeLocation: null;
            postalCode: null;
            preferredDataLocation: null;
            preferredLanguage: string;
            proxyAddresses: string[];
            refreshTokensValidFromDateTime: string;
            imAddresses: string[];
            isResourceAccount: null;
            showInAddressList: null;
            securityIdentifier: string;
            signInSessionsValidFromDateTime: string;
            state: null;
            streetAddress: null;
            surname: string;
            usageLocation: string;
            userPrincipalName: string;
            userType: string;
            employeeOrgData: null;
            passwordProfile: null;
            assignedLicenses: {
                disabledPlans: never[];
                skuId: string;
            }[];
            assignedPlans: {
                assignedDateTime: string;
                capabilityStatus: string;
                service: string;
                servicePlanId: string;
            }[];
            authorizationInfo: {
                certificateUserIds: never[];
            };
            identities: {
                signInType: string;
                issuer: string;
                issuerAssignedId: string;
            }[];
            onPremisesProvisioningErrors: never[];
            onPremisesExtensionAttributes: {
                extensionAttribute1: null;
                extensionAttribute2: null;
                extensionAttribute3: null;
                extensionAttribute4: null;
                extensionAttribute5: null;
                extensionAttribute6: null;
                extensionAttribute7: null;
                extensionAttribute8: null;
                extensionAttribute9: null;
                extensionAttribute10: null;
                extensionAttribute11: null;
                extensionAttribute12: null;
                extensionAttribute13: null;
                extensionAttribute14: null;
                extensionAttribute15: null;
            };
            provisionedPlans: {
                capabilityStatus: string;
                provisioningStatus: string;
                service: string;
            }[];
            serviceProvisioningErrors: never[];
        }[];
    };
    postUser: {
        '@odata.context': string;
        id: string;
        businessPhones: never[];
        displayName: string;
        givenName: null;
        jobTitle: null;
        mail: null;
        mobilePhone: null;
        officeLocation: null;
        preferredLanguage: null;
        surname: null;
        userPrincipalName: string;
    };
    getUser: {
        '@odata.context': string;
        businessPhones: string[];
        displayName: string;
        givenName: string;
        jobTitle: string;
        mail: string;
        mobilePhone: string;
        officeLocation: string;
        preferredLanguage: string;
        surname: string;
        userPrincipalName: string;
        id: string;
    };
    metadata: {
        groups: string;
        users: string;
    };
};
export declare const microsoftEntraNodeResponse: {
    createGroup: {
        json: {
            '@odata.context': string;
            id: string;
            deletedDateTime: null;
            classification: null;
            createdDateTime: string;
            creationOptions: never[];
            displayName: string;
            expirationDateTime: null;
            groupTypes: string[];
            isAssignableToRole: boolean;
            mail: null;
            mailEnabled: boolean;
            mailNickname: string;
            membershipRule: string;
            membershipRuleProcessingState: string;
            onPremisesDomainName: null;
            onPremisesLastSyncDateTime: null;
            onPremisesNetBiosName: null;
            onPremisesSamAccountName: null;
            onPremisesSecurityIdentifier: null;
            onPremisesSyncEnabled: null;
            preferredLanguage: null;
            proxyAddresses: never[];
            renewedDateTime: string;
            resourceBehaviorOptions: never[];
            resourceProvisioningOptions: never[];
            securityEnabled: boolean;
            securityIdentifier: string;
            theme: null;
            onPremisesProvisioningErrors: never[];
            serviceProvisioningErrors: never[];
            description: string;
            preferredDataLocation: string;
            uniqueName: string;
            visibility: string;
        };
    }[];
    deleteGroup: {
        json: {
            deleted: boolean;
        };
    }[];
    getGroup: {
        json: {
            '@odata.context': string;
            id: string;
            deletedDateTime: null;
            classification: null;
            createdDateTime: string;
            creationOptions: string[];
            description: string;
            displayName: string;
            expirationDateTime: null;
            groupTypes: string[];
            isAssignableToRole: null;
            mail: string;
            mailEnabled: boolean;
            mailNickname: string;
            membershipRule: string;
            membershipRuleProcessingState: string;
            onPremisesDomainName: null;
            onPremisesLastSyncDateTime: null;
            onPremisesNetBiosName: null;
            onPremisesSamAccountName: null;
            onPremisesSecurityIdentifier: null;
            onPremisesSyncEnabled: null;
            preferredDataLocation: null;
            preferredLanguage: null;
            proxyAddresses: string[];
            renewedDateTime: string;
            resourceBehaviorOptions: string[];
            resourceProvisioningOptions: never[];
            securityEnabled: boolean;
            securityIdentifier: string;
            theme: null;
            uniqueName: null;
            visibility: string;
            onPremisesProvisioningErrors: never[];
            serviceProvisioningErrors: never[];
        };
    }[];
    getGroupWithProperties: {
        json: {
            '@odata.context': string;
            createdDateTime: string;
            classification: null;
            deletedDateTime: null;
            description: string;
            displayName: string;
            expirationDateTime: null;
            groupTypes: string[];
            visibility: string;
            theme: null;
            uniqueName: null;
            securityIdentifier: string;
            renewedDateTime: string;
            securityEnabled: boolean;
            isManagementRestricted: null;
            isAssignableToRole: null;
            id: string;
            onPremisesSecurityIdentifier: null;
            onPremisesSamAccountName: null;
            onPremisesNetBiosName: null;
            onPremisesSyncEnabled: null;
            preferredDataLocation: null;
            preferredLanguage: null;
            proxyAddresses: string[];
            onPremisesLastSyncDateTime: null;
            onPremisesDomainName: null;
            membershipRule: string;
            membershipRuleProcessingState: string;
            mailNickname: string;
            mailEnabled: boolean;
            mail: string;
            licenseProcessingState: null;
            allowExternalSenders: boolean;
            autoSubscribeNewMembers: boolean;
            isSubscribedByMail: boolean;
            unseenCount: number;
            hideFromOutlookClients: boolean;
            hideFromAddressLists: boolean;
            assignedLabels: never[];
            assignedLicenses: never[];
            serviceProvisioningErrors: never[];
            onPremisesProvisioningErrors: never[];
            members: {
                '@odata.type': string;
                id: string;
                deletedDateTime: null;
                accountEnabled: boolean;
                ageGroup: null;
                businessPhones: string[];
                city: null;
                companyName: null;
                consentProvidedForMinor: null;
                country: string;
                createdDateTime: string;
                creationType: null;
                department: null;
                displayName: string;
                employeeId: null;
                employeeHireDate: null;
                employeeLeaveDateTime: null;
                employeeType: null;
                externalUserState: null;
                externalUserStateChangeDateTime: null;
                faxNumber: null;
                givenName: string;
                isLicenseReconciliationNeeded: boolean;
                jobTitle: null;
                legalAgeGroupClassification: null;
                mail: string;
                mailNickname: string;
                mobilePhone: null;
                onPremisesDistinguishedName: null;
                onPremisesDomainName: null;
                onPremisesImmutableId: null;
                onPremisesLastSyncDateTime: null;
                onPremisesSecurityIdentifier: null;
                onPremisesSamAccountName: null;
                onPremisesSyncEnabled: null;
                onPremisesUserPrincipalName: null;
                otherMails: string[];
                passwordPolicies: null;
                officeLocation: null;
                postalCode: null;
                preferredDataLocation: null;
                preferredLanguage: string;
                proxyAddresses: string[];
                refreshTokensValidFromDateTime: string;
                imAddresses: string[];
                isResourceAccount: null;
                showInAddressList: null;
                securityIdentifier: string;
                signInSessionsValidFromDateTime: string;
                state: null;
                streetAddress: null;
                surname: string;
                usageLocation: string;
                userPrincipalName: string;
                userType: string;
                employeeOrgData: null;
                passwordProfile: null;
                assignedLicenses: {
                    disabledPlans: never[];
                    skuId: string;
                }[];
                assignedPlans: {
                    assignedDateTime: string;
                    capabilityStatus: string;
                    service: string;
                    servicePlanId: string;
                }[];
                authorizationInfo: {
                    certificateUserIds: never[];
                };
                identities: {
                    signInType: string;
                    issuer: string;
                    issuerAssignedId: string;
                }[];
                onPremisesProvisioningErrors: never[];
                onPremisesExtensionAttributes: {
                    extensionAttribute1: null;
                    extensionAttribute2: null;
                    extensionAttribute3: null;
                    extensionAttribute4: null;
                    extensionAttribute5: null;
                    extensionAttribute6: null;
                    extensionAttribute7: null;
                    extensionAttribute8: null;
                    extensionAttribute9: null;
                    extensionAttribute10: null;
                    extensionAttribute11: null;
                    extensionAttribute12: null;
                    extensionAttribute13: null;
                    extensionAttribute14: null;
                    extensionAttribute15: null;
                };
                provisionedPlans: {
                    capabilityStatus: string;
                    provisioningStatus: string;
                    service: string;
                }[];
                serviceProvisioningErrors: never[];
            }[];
        };
    }[];
    updateGroup: {
        json: {
            updated: boolean;
        };
    }[];
    addUserToGroup: {
        json: {
            added: boolean;
        };
    }[];
    createUser: {
        json: {
            '@odata.context': string;
            id: string;
            businessPhones: string[];
            displayName: string;
            givenName: string;
            jobTitle: string;
            mail: string;
            mobilePhone: string;
            officeLocation: string;
            preferredLanguage: string;
            userPrincipalName: string;
            aboutMe: string;
            ageGroup: string;
            birthday: string;
            city: string;
            companyName: string;
            consentProvidedForMinor: string;
            country: string;
            department: string;
            employeeId: string;
            employeeType: string;
            employeeHireDate: string;
            employeeLeaveDateTime: string;
            employeeOrgData: {
                costCenter: string;
                division: string;
            };
            interests: string[];
            surname: string;
            mySite: string;
            onPremisesImmutableId: string;
            otherMails: string[];
            passwordPolicies: string;
            passwordProfile: {
                forceChangePasswordNextSignInWithMfa: boolean;
            };
            pastProjects: string[];
            postalCode: string;
            responsibilities: string[];
            schools: string[];
            skills: string[];
            state: string;
            streetAddress: string;
            usageLocation: string;
            userType: string;
        };
    }[];
    deleteUser: {
        json: {
            deleted: boolean;
        };
    }[];
    getUser: {
        json: {
            '@odata.context': string;
            businessPhones: string[];
            displayName: string;
            givenName: string;
            jobTitle: string;
            mail: string;
            mobilePhone: string;
            officeLocation: string;
            preferredLanguage: string;
            surname: string;
            userPrincipalName: string;
            id: string;
        };
    }[];
    removeUserFromGroup: {
        json: {
            removed: boolean;
        };
    }[];
    updateUser: {
        json: {
            updated: boolean;
        };
    }[];
    loadOptions: {
        getGroupProperties: {
            name: string;
            value: string;
        }[];
        getUserProperties: {
            name: string;
            value: string;
        }[];
    };
};
//# sourceMappingURL=mocks.d.ts.map